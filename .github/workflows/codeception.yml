name: Codeception Tests

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        php-version: [8.1]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup PHP ${{ matrix.php-version }}
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: mbstring, xml, pdo, pdo_mysql
    
    - name: Validate composer.json
      run: composer validate --strict
    
    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ matrix.php-version }}-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-${{ matrix.php-version }}-
    
    - name: Install dependencies
      run: composer install --prefer-dist --no-progress
    
    - name: Build Codeception actors
      run: vendor/bin/codecept build
    
    - name: Start PHP built-in server
      run: |
        php -S localhost:8000 &
        sleep 3
    
    - name: Wait for server to be ready
      run: |
        timeout 30 bash -c 'until curl -s http://localhost:8000; do sleep 1; done'
    
    - name: Run Codeception tests
      run: vendor/bin/codecept run --xml --html
    
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-php-${{ matrix.php-version }}
        path: tests/_output/
    
    - name: Publish test results
      if: always()
      uses: EnricoMi/publish-unit-test-result-action@v2
      with:
        files: tests/_output/result.xml
        check_name: "Test Results (PHP ${{ matrix.php-version }})"
